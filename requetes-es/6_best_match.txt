# Utiliser une variable du RP pour interroger plusieurs champs Sirus en même temps, mais ne prendre que le meilleur score au lieu de les sommer.
# https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html
# https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-dis-max-query.html

# Note ; : le "^" permet de booster un champ par rapport à d'autres

# Exemple 1 : OK
GET /sirus_basic_mapping/_search
{
  "query": {
    "bool" : {
      "should" : [
        {
            "multi_match" : {
              "query":      "59375 MARCHIENNES",
              "type":       "best_fields",
              "fields":     [ "localisation", "sir_adr_et_com_lib^10", "adr_et_l6^10", "adr_et_voie_lib^10", "adr_et_l4^10" ],
              "boost" : 4
            }
        },
        {
            "multi_match" : {
              "query":      "MAISON DE RETRAITE",
              "type":       "best_fields",
              "fields":     [ "description", "enseigne^10", "denom^10", "denom_condense^10", "enseigne_et1^10", "nom_comm_et^10", "adr_et_l1^10", "adr_et_l2^10" ],
              "boost" : 4
            }
        },
        {
          "term": {
            "apet": {
              "value": "8710A",
              "boost": 2.0 
            }
          }
        },
        {
            "fuzzy" : {
                "denom" : {
                    "value" : "MAISON DE RETRAITE",
                    "prefix_length" : 4,
                    "boost" : 2.0

                }
            }
        },
        {
            "fuzzy" : {
                "adr_et_loc_geo" : {
                    "value" : "59375 MARCHIENNES",
                    "prefix_length" : 5,
                    "boost" : 2.0
                }
            }
        }

      ],
      "minimum_should_match" : 1
    }
  }
}